apiVersion: v1
kind: ConfigMap
metadata:
  namespace: default
  name: notification-mongodb-config
data:
  mongod.conf: |
    net:
      port: 27017
    replication:
      replSetName: rs0
    storage:
      dbPath: /data/db
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: notification-mongodb
  namespace: default
spec:
  serviceName: notification-mongodb
  replicas: 1
  template:
    metadata:
      labels:
        app: notification-mongodb
      annotations:
    spec:
      initContainers:
        - name: config
          image: "gcr.io/google_containers/mongodb-install:0.5"
          args:
            - --work-dir=/work-dir
          volumeMounts:
            - name: workdir
              mountPath: /work-dir
            - name: config
              mountPath: /config
        - name: boot
          image: mongo:3.6.3
          command:
            - /work-dir/peer-finder
          args:
            - -on-start=/work-dir/on-start.sh
            - "-service=notification-mongodb"
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: REPLICA_SET
              value: rs0
          volumeMounts:
            - name: workdir
              mountPath: /work-dir
            - name: config
              mountPath: /config
            - name: datadir
              mountPath: /data/db
      containers:
        - name: mongodb
          image: mongo:3.6.3
          ports:
            - name: peer
              containerPort: 27017
          command:
            - mongod
            - --config=/config/mongod.conf
          livenessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mongo
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            timeoutSeconds: 1
          volumeMounts:
            - name: datadir
              mountPath: /data/db
            - name: config
              mountPath: /config
            - name: workdir
              mountPath: /work-dir
      volumes:
        - name: config
          configMap:
            name: notification-mongodb-config
        - name: workdir
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: "1Gi"
---
# Headless service for DNS record
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: notification-mongodb
  namespace: default
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: peer
      port: 27017
  selector:
    app: notification-mongodb
